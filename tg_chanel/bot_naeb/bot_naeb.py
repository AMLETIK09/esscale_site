import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder

import os
TOKEN = os.getenv('TOKEN')
ADMIN_ID = int(os.getenv('ADMIN_ID'))

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤
TARIFFS = {
    "pay_month": {
        "title": "üì¶ –¢–∞—Ä–∏—Ñ: –Ω–∞ –º–µ—Å—è—Ü (-25%)",
        "price": 549.00,
        "currency": "üá∑üá∫RUB",
        "duration": "–º–µ—Å—è—Ü",
        "access": "‚Ä¢ Anechka Privat (–∫–∞–Ω–∞–ª)",
        "note": "–ü—Ä–∏–≤–µ—Ç –∫–æ—Ç–∏–∫.\n–í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –º–æ–∏ –≥–æ–ª—ã–µ –ø–∏—Å—è, –ø–æ–ø–∞ –∏ —Å–∏—Å–∏. –ï—Å–ª–∏ —Ç—ã –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–ª —Ç–∞—Ä–∏—Ñ ‚Äî —Å–Ω–∏–∑—É –¥—Ä—É–≥–∏–µ (–æ–Ω–∏ –ª—É—á—à–µ). –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª —ç—Ç–æ—Ç ‚Äî –±–µ–≥–æ–º –æ–ø–ª–∞—á–∏–≤–∞—Ç—å :))",
        "payment_details": {
            "receiver": "–ò–≤–∞–Ω–æ–≤–∞ –ê.–ê.",
            "card": "2202 2006 7834 1442"
        }
    },
    "pay_forever": {
        "title": "üì¶ –¢–∞—Ä–∏—Ñ: –Ω–∞–≤—Å–µ–≥–¥–∞ (-20%)",
        "price": 799.00,
        "currency": "üá∑üá∫RUB",
        "duration": "–±–µ—Å—Å—Ä–æ—á–Ω—ã–π",
        "access": "‚Ä¢ Anechka Privat (–∫–∞–Ω–∞–ª)",
        "note": "–ü—Ä–∏–≤–µ—Ç –∫–æ—Ç–∏–∫.\n–í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –º–æ–∏ –≥–æ–ª—ã–µ –ø–∏—Å—è, –ø–æ–ø–∞ –∏ —Å–∏—Å–∏. –ï—Å–ª–∏ —Ç—ã –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–ª —Ç–∞—Ä–∏—Ñ ‚Äî —Å–Ω–∏–∑—É –¥—Ä—É–≥–∏–µ (–æ–Ω–∏ –ª—É—á—à–µ). –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª —ç—Ç–æ—Ç ‚Äî –±–µ–≥–æ–º –æ–ø–ª–∞—á–∏–≤–∞—Ç—å :))",
        "payment_details": {
            "receiver": "–ò–≤–∞–Ω–æ–≤–∞ –ê.–ê.",
            "card": "2202 2006 7834 1442"
        }
    },
    "pay_mega_vip": {
        "title": "üì¶ –¢–∞—Ä–∏—Ñ: Mega –≤–∏–ø",
        "price": 1199.00,
        "currency": "üá∑üá∫RUB",
        "duration": "–±–µ—Å—Å—Ä–æ—á–Ω—ã–π",
        "access": "‚Ä¢ –≠—Å—Ç–µ—Ç–∏–∫–∞‚ù§Ô∏è (–∫–∞–Ω–∞–ª)",
        "note": "–†–µ–±—è—Ç–∞ —ç—Ç–æ –∫–∞–Ω–∞–ª —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–∞–º—ã—Ö - —Å–∞–º—ã—Ö —è—Ä—ã—Ö –º–æ–∏—Ö –ø–æ–∫–ª–æ–Ω–Ω–∏–∫–æ–≤. –î–ª—è —Ü–µ–Ω–∏—Ç–µ–ª–µ–π —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–π –∫—Ä–∞—Å–æ—Ç—ã –∏ –¥–ª—è —Ç–µ—Ö –∫—Ç–æ –≤—Å—è—á–µ—Å–∫–∏ —Ö–æ—á–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –º–µ–Ω—è –∏ –º–æ–π –ø—Ä–æ–µ–∫—Çüíô",
        "payment_details": {
            "receiver": "–ò–≤–∞–Ω–æ–≤–∞ –ê.–ê.",
            "card": "2202 2006 7834 1442"
        }
    },
    "pay_special_video": {
        "title": "üì¶ –¢–∞—Ä–∏—Ñ: –û—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∞—Ä–∏—Ñ –≥–¥–µ –º–µ–Ω—è —Ç—Ä–∞—Ö–∞—é—Çüî•",
        "price": 1499.00,
        "currency": "üá∑üá∫RUB",
        "duration": "–±–µ—Å—Å—Ä–æ—á–Ω—ã–π",
        "access": "‚Ä¢ –®–∞–ª–æ—Å—Ç–∏ –ê–Ω–µ—á–∫–∏ —Å –µ—ë –¥—Ä—É–∑—å—è–º–∏ (–∫–∞–Ω–∞–ª)\n‚Ä¢ –®–∞–ª–æ—Å—Ç–∏ —Å –ø–æ–¥—Ä—É–∂–∫–æ–π (–∫–∞–Ω–∞–ª)",
        "note": "",
        "payment_details": {
            "receiver": "–ò–≤–∞–Ω–æ–≤–∞ –ê.–ê.",
            "card": "2202 2006 7834 1442"
        }
    }
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è)
@dp.message(CommandStart())
async def command_start_handler(message: types.Message) -> None:
    builder = InlineKeyboardBuilder()
    for tariff_id, tariff_data in TARIFFS.items():
        builder.button(
            text=tariff_data["title"].split(" - ")[0], 
            callback_data=tariff_id
        )
    builder.adjust(1)

    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –ü—Ä–∏–≤–∞—Ç–∫–µ –ê–Ω–µ—á–∫–∏üòò!\n"
        " \n"
        "–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –¥–∞—ë—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ:\n"
        "‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –¥–∞–∂–µ –∫–æ–≥–¥–∞ —è –Ω–µ –≤ —Å–µ—Ç–∏\n\n"
        "‚ÄºÔ∏è–°–ö–ò–î–ö–ò –î–û 30%‚ÄºÔ∏è\n\n"
        "‚ù§Ô∏è –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞:\n"
        "‚Ä¢ –ú–µ—Å—è—Ü ‚Äî 549‚ÇΩ\n"
        "‚Ä¢ –ù–∞–≤—Å–µ–≥–¥–∞ ‚Äî 799‚ÇΩ\n"
        "‚Ä¢ MEGA –≤–∏–ø ‚Äî 1199‚ÇΩ\n"
        "‚Ä¢ –û—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∞—Ä–∏—Ñüî• ‚Äî 1499‚ÇΩ",
        reply_markup=builder.as_markup()
    )

# –ú–µ–Ω—é —Ç–∞—Ä–∏—Ñ–∞
@dp.callback_query(F.data.in_(TARIFFS.keys()))
async def process_tariff_choice(callback: types.CallbackQuery):
    tariff_id = callback.data
    tariff = TARIFFS[tariff_id]
    
    text = (
        f"{tariff['title']}\n"
        f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {tariff['price']} {tariff['currency']}\n"
        f"üìÖ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: <b>{tariff['duration']}</b>\n\n"
        f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫:\n"
        f"{tariff['access']}\n\n"
        f"{tariff['note']}"
    )

    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="go_back")
    builder.button(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data=f"confirm_{tariff_id}")
    builder.adjust(1)

    await callback.message.edit_text(
        text,
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    await callback.answer()

# –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ)
@dp.callback_query(F.data == "go_back")
async def go_back(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    for tariff_id, tariff_data in TARIFFS.items():
        builder.button(
            text=tariff_data["title"].split(" - ")[0], 
            callback_data=tariff_id
        )
    builder.adjust(1)

    await callback.message.edit_text(
        "–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –¥–∞—ë—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ:\n"
        "‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –¥–∞–∂–µ –∫–æ–≥–¥–∞ —è –Ω–µ –≤ —Å–µ—Ç–∏\n\n"
        "‚ÄºÔ∏è–°–ö–ò–î–ö–ò –î–û 30%‚ÄºÔ∏è\n\n"
        "‚ù§Ô∏è –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞:\n"
        "‚Ä¢ –ú–µ—Å—è—Ü ‚Äî 549‚ÇΩ\n"
        "‚Ä¢ –ù–∞–≤—Å–µ–≥–¥–∞ ‚Äî 799‚ÇΩ\n"
        "‚Ä¢ MEGA –≤–∏–ø ‚Äî 1199‚ÇΩ\n"
        "‚Ä¢ –û—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∞—Ä–∏—Ñüî• ‚Äî 1499‚ÇΩ",
        reply_markup=builder.as_markup()
    )
    await callback.answer()

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
@dp.callback_query(F.data.startswith("confirm_"))
async def confirm_payment(callback: types.CallbackQuery):
    tariff_id = callback.data.replace("confirm_", "")
    tariff = TARIFFS[tariff_id]
    
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f"paid_{tariff_id}")
    builder.adjust(1)

    await callback.message.edit_text(
        f"<b>üí≥ –û–ø–ª–∞—Ç–∞ —Ç–∞—Ä–∏—Ñ–∞</b>\n\n"
        f"üí∞ –°—É–º–º–∞: {tariff['price']} {tariff['currency']}\n"
        f"üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {tariff['payment_details']['receiver']}\n"
        f"üè¶ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: <code>{tariff['payment_details']['card']}</code>\n\n"
        "–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è "–Ø –æ–ø–ª–∞—Ç–∏–ª"
@dp.callback_query(F.data.startswith("paid_"))
async def paid_handler(callback: types.CallbackQuery):
    tariff_id = callback.data.replace("paid_", "")
    tariff = TARIFFS[tariff_id]
    user = callback.from_user

    # –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    admin_message = (
        "üì© <b>–ù–û–í–ê–Ø –û–ü–õ–ê–¢–ê</b>\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.full_name} "
        f"(<a href='tg://user?id={user.id}'>@{user.username}</a>, "
        f"ID: <code>{user.id}</code>)\n"
        f"üì¶ –¢–∞—Ä–∏—Ñ: <b>{tariff['title']}</b>\n"
        f"üí∞ –°—É–º–º–∞: <b>{tariff['price']} {tariff['currency']}</b>"
    )

    await bot.send_message(chat_id=ADMIN_ID, text=admin_message, parse_mode="HTML")

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.message.edit_text(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –Ø –ø—Ä–æ–≤–µ—Ä—é –ø–µ—Ä–µ–≤–æ–¥ –∏ –≤—ã–¥–∞–º –¥–æ—Å—Ç—É–ø –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ üíã\n\n"
        "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é, –Ω–∞–∂–º–∏ /start"
    )
    await callback.answer()

# –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    from dotenv import load_dotenv
    load_dotenv()
    asyncio.run(main())
